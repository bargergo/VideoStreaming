apiVersion: v1
kind: Service
metadata:
  name: users
  labels:
    app.kubernetes.io/name: users
    users.tier: backend
spec:
  ports:
    - name: http
      port: 5004
      targetPort: 80
  selector:
    app.kubernetes.io/name: users
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
  labels:
    app.kubernetes.io/name: users
    users.tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: users
  template:
    metadata:
      labels:
        app.kubernetes.io/name: users
        users.tier: backend
    spec:
      containers:
        - name: users        
          image: user-service:dev
          ports:
            - name: http
              containerPort: 80
          env:
            - name: JWT__SECRET
              valueFrom:
                secretKeyRef:
                  name: my-secrets
                  key: jwt_secret
            - name: SERVER__PORT
              value: "80"
            - name: SPRING__DATASOURCE__URL
              value: "jdbc:mysql://user-db:3306/user-db?createDatabaseIfNotExist=true&autoReconnect=true"
            - name: SPRING__DATASOURCE__USERNAME
              valueFrom:
                secretKeyRef:
                  name: my-secrets
                  key: user_db_user
            - name: SPRING__DATASOURCE__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-secrets
                  key: user_db_password
      restartPolicy: Always
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: users
  labels:
    app.kubernetes.io/name: users
    users.tier: backend
spec:
  rules:
    - http:
        paths:
          - path: /api/user-service
            pathType: Prefix
            backend:
              service: 
                name: users
                port:
                  name: http
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: login-guard
spec:
  forwardAuth:
    address: http://users:5004/api/user-service/check
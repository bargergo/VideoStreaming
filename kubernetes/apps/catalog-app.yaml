apiVersion: v1
kind: Service
metadata:
  name: catalog
  labels:
    app.kubernetes.io/name: catalog
    catalog.tier: backend
spec:
  ports:
  - name: http
    port: 5003
    targetPort: 80
  selector:
    app.kubernetes.io/name: catalog
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog
  labels:
    app.kubernetes.io/name: catalog
    catalog.tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: catalog
  template:
    metadata:
      labels:
        app.kubernetes.io/name: catalog
        catalog.tier: backend
    spec:
      containers:
      - name: catalog        
        image: catalog-service:dev
        ports:
          - name: http
            containerPort: 80
        env:
          - name: FileStorageSettings__Path
            value: /data
          - name: MessageQueueSettings__Hostname
            value: videostreaming-messagequeue
          - name: MessageQueueSettings__Username
            valueFrom:
              secretKeyRef:
                name: my-secrets
                key: message_queue_user
          - name: MessageQueueSettings__Password
            valueFrom:
              secretKeyRef:
                name: my-secrets
                key: message_queue_password
          - name: ConnectionStrings__CatalogDb__part1
            value: "Server=catalog-db;Database=catalogdb;User=sa;Password="
          - name: ConnectionStrings__CatalogDb__part2
            valueFrom:
              secretKeyRef:
                name: my-secrets
                key: catalog_db_password
          - name: ConnectionStrings__CatalogDb__part3
            value: ";"
          - name: ConnectionStrings__CatalogDb
            value: $(ConnectionStrings__CatalogDb__part1)$(ConnectionStrings__CatalogDb__part2)$(ConnectionStrings__CatalogDb__part3)
        volumeMounts:
          - mountPath: "/data"
            name: nfs-volume
      restartPolicy: Always
      volumes:
        - name: nfs-volume
          persistentVolumeClaim:
            claimName: nfs-pvc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: catalog-public
  labels:
    app.kubernetes.io/name: catalog
    catalog.tier: backend
spec:
  rules:
    - http:
        paths:
          - path: /api/catalog/public
            pathType: Prefix
            backend:
              service: 
                name: catalog
                port:
                  name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: catalog-private
  labels:
    app.kubernetes.io/name: catalog
    catalog.tier: backend
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.middlewares: default-login-guard@kubernetescrd
spec:
  rules:
    - http:
        paths:
          - path: /api/catalog/private
            pathType: Prefix
            backend:
              service: 
                name: catalog
                port:
                  name: http
version: '3.4'

services:
  apigateway:
    image: traefik:v2.5.3
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      
  videostreaming-messagequeue:
    image: rabbitmq:3.8.3-management
    container_name: "videostreaming-messagequeue"
    ports:
    # The standard AMQP protocol port
    - '5672:5672'
    # HTTP management UI
    - '15672:15672' 

  upload-service:
    build:
      context: VideoStreaming
      dockerfile: UploadService/Dockerfile
    environment:
      FileStorageSettings__DiskStorePath: /data
      MessageQueueSettings__Hostname: videostreaming-messagequeue
      MessageQueueSettings__Username: guest
      MessageQueueSettings__Password: guest
    ports: 
      - "5001:80"
    volumes:
      - tusfiles:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.upload-service.rule=PathPrefix(`/api/files`)"
      - "traefik.http.routers.upload-service.entrypoints=web"
    depends_on:
      - videostreaming-messagequeue
      
  convert-service:
    build:
      context: VideoStreaming
      dockerfile: ConvertService/Dockerfile
    environment:
      FileStorageSettings__Path: /data
      MessageQueueSettings__Hostname: videostreaming-messagequeue
      MessageQueueSettings__Username: guest
      MessageQueueSettings__Password: guest
    ports: 
      - "5002:80"
    volumes:
      - tusfiles:/data
    depends_on:
      - videostreaming-messagequeue
      
  catalog-service:
    build:
      context: VideoStreaming
      dockerfile: CatalogService/Dockerfile
    environment:
      FileStorageSettings__Path: /data
      MessageQueueSettings__Hostname: videostreaming-messagequeue
      MessageQueueSettings__Username: guest
      MessageQueueSettings__Password: guest
    ports: 
      - "5003:80"
    volumes:
      - tusfiles:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.catalog-service.rule=PathPrefix(`/api/catalog`)"
      - "traefik.http.routers.catalog-service.entrypoints=web"
    depends_on:
      - videostreaming-messagequeue
      
  webclient:
    build:
      context: webclient
      dockerfile: Dockerfile
    ports:
      - "5000:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webclient.rule=PathPrefix(`/`)"
      - "traefik.http.routers.webclient.entrypoints=web"
    
volumes:
  tusfiles:
    driver: local
    driver_opts:
      type: nfs
      o: addr=host.docker.internal,rw,nolock
      device: ":/F/tusfiles"